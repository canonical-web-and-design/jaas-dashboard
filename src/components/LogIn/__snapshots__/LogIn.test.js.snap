// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LogIn renders a 'connecting' message while connecting 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <LogIn>
    <div
      className="login"
    >
      <div
        className="login__inner p-card--highlighted"
      >
        <img
          alt="JAAS logo"
          className="login__logo"
          src="logo-black-on-white.svg"
        />
        <IdentityProviderForm>
          <Button>
            <button
              className="p-button--neutral"
              disabled={true}
            >
              <Spinner
                text="Connecting..."
              >
                <span
                  className="p-spinner p-text--default"
                >
                  <i
                    className="p-icon--spinner u-animation--spin"
                  />
                  <span
                    className="p-icon__text"
                  >
                    Connecting...
                  </span>
                </span>
              </Spinner>
            </button>
          </Button>
        </IdentityProviderForm>
      </div>
    </div>
    <main>
      App content
    </main>
  </LogIn>
</Provider>
`;

exports[`LogIn renders a UserPass login UI if the user is not logged in 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <LogIn>
    <div
      className="login"
    >
      <div
        className="login__inner p-card--highlighted"
      >
        <img
          alt="JAAS logo"
          className="login__logo"
          src="logo-black-on-white.svg"
        />
        <UserPassForm>
          <form
            onSubmit={[Function]}
          >
            <label
              htmlFor="username"
            >
              Username
            </label>
            <input
              id="username"
              name="username"
              type="text"
            />
            <label
              htmlFor="password"
            >
              Password
            </label>
            <input
              id="password"
              name="password"
              type="password"
            />
            <button
              className="p-button--positive"
              type="submit"
            >
              Log in to the dashboard
            </button>
          </form>
        </UserPassForm>
      </div>
    </div>
    <main>
      App content
    </main>
  </LogIn>
</Provider>
`;

exports[`LogIn renders an IdentityProvider login UI if the user is not logged in 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <LogIn>
    <div
      className="login"
    >
      <div
        className="login__inner p-card--highlighted"
      >
        <img
          alt="JAAS logo"
          className="login__logo"
          src="logo-black-on-white.svg"
        />
        <IdentityProviderForm>
          <Button
            visitURL="I am a url"
          >
            <a
              className="p-button--positive"
              href="I am a url"
              rel="noopener noreferrer"
              target="_blank"
            >
              Log in to the dashboard
            </a>
          </Button>
        </IdentityProviderForm>
      </div>
    </div>
    <main>
      App content
    </main>
  </LogIn>
</Provider>
`;
